---
version: 2.1

executors:
  golang_executor:
    docker:
      - image: circleci/golang:1.15

commands:
  prepare_golang:
    description: "checkout, install all packages and handle cache"
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Set Git URL rewrite
          command: |
            git config --global --add url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/".insteadOf "git@gitlab.com:"
            git config --global --add url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/".insteadOf "https://gitlab.com/"
      - run:
          name: Pull and build dependencies for the project
          command: go get
      - run:
          name: Install binary compresor
          command: |
            sudo apt update
            sudo apt -y install upx-ucl
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

jobs:
  styleCheck:
    executor: golang_executor
    steps:
      - prepare_golang
      - run:
          name: Install linting tools
          command: make lint-tools
      - run:
          name: Check lints
          command: make lint-ci

  build:
    executor: golang_executor
    steps:
      - prepare_golang
      - run:
          name: Build
          command: |
            CGO_ENABLED=0 GOOS=linux go build -ldflags="-s -w" -a -v -o build/bin/quorum-hashicorp-vault-plugin
            upx build/bin/quorum-hashicorp-vault-plugin
            sha256sum -b build/bin/quorum-hashicorp-vault-plugin | cut -d' ' -f1 > build/bin/SHA256SUM
      - persist_to_workspace:
          root: ~/project/build/bin
          paths:
            - ./
  test:
    executor: golang_executor
    steps:
      - prepare_golang
      - run:
          name: Unit tests
          command: make test

  publish-github-release:
    executor: golang_executor
    steps:
      - attach_workspace:
          at: ./artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            VERSION="${CIRCLE_TAG}"
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/

workflows:
  version: 2
  default:
    jobs:
      - styleCheck:
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /.*/
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /.*/
      - test:
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /.*/
      - publish-github-release:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      
