---
version: 2.1

orbs:
  codecov: codecov/codecov@3.2
  
executors:
  golang_executor:
    docker:
      - image: circleci/golang:1.15

commands:
  prepare_golang:
    description: "checkout, install all packages and handle cache"
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Pull and build dependencies for the project
          command: go get
      - run:
          name: Install binary compresor
          command: |
            sudo apt update
            sudo apt -y install upx-ucl
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
  prepare_docker:
    description: "Docker login"
    steps:
      - run:
          name: Docker login
          command: |
            echo "Login in cloudsmith"
            echo $CLOUDSMITH_PASS_RW | docker login docker.consensys.net -u $CLOUDSMITH_USER_RW --password-stdin
            echo "Login in docker.io"
            echo $DOCKER_PASSWORD_RW | docker login docker.io -u $DOCKER_USER_RW --password-stdin

  prepare_docker_buildx:
    description: "Docker buildx setup"
    parameters:
      qemu-user-static-version:
        default: 6.1.0-8
        description: The version of qemu-user-static to use.
        type: string
      version:
        default: 0.7.1
        description: The version of buildx to install.
        type: string
    steps:
      - run:
          name: Install Docker buildx
          command: |
            mkdir -p ~/.docker/cli-plugins
            wget "https://github.com/docker/buildx/releases/download/v<< parameters.version >>/buildx-v<< parameters.version >>.linux-amd64" -O ~/.docker/cli-plugins/docker-buildx
            chmod a+x ~/.docker/cli-plugins/docker-buildx
      - run:
          name: Start multiarch/qemu-user-static container
          command: |
            docker run --rm --privileged multiarch/qemu-user-static:<< parameters.qemu-user-static-version >> --reset -p yes
      - run:
          name: Create docker-multiarch builder
          command: |
            docker context create docker-multiarch
            DOCKER_CONTEXT=$(docker buildx create --use docker-multiarch --platform linux/amd64,linux/arm64)
            docker buildx inspect --builder ${DOCKER_CONTEXT} --bootstrap
            docker buildx use ${DOCKER_CONTEXT}
      - run:
          command: docker buildx install
          name: Initialize Docker buildx

jobs:
  styleCheck:
    executor: golang_executor
    steps:
      - prepare_golang
      - run:
          name: Install linting tools
          command: make lint-tools
      - run:
          name: Check lints
          command: make lint-ci

  build:
    executor: golang_executor
    steps:
      - prepare_golang
      - run:
          name: Build
          command: |
            CGO_ENABLED=0 GOOS=linux go build -ldflags="-s -w" -a -v -o ./build/bin/quorum-hashicorp-vault-plugin
            upx ./build/bin/quorum-hashicorp-vault-plugin
            sha256sum -b ./build/bin/quorum-hashicorp-vault-plugin | cut -d' ' -f1 > ./build/bin/SHA256SUM
      - persist_to_workspace:
          root: ~/project/build/bin
          paths:
            - ./

  test:
    executor: golang_executor
    steps:
      - prepare_golang
      - run:
          name: Unit tests
          command: make run-coverage
      - codecov/upload:
          file: ./build/coverage/coverage.out
      - store_artifacts:
          path: ./build/coverage/coverage.html
          destination: coverage.html

  publish-github-release:
    executor: golang_executor
    steps:
      - attach_workspace:
          at: ./artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            VERSION="${CIRCLE_TAG}"
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/

  build-docker-image:
    docker:
      - image: cimg/base:2021.12
    resource_class: xlarge
    parameters: # parameters are at the job level
      docker-image-platform:
        type: string
        default: linux/amd64
      dockerfile:
        type: string
        default: Dockerfile
      docker-image-registry:
        type: string
      docker-image-tag:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: ./build/bin
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - prepare_docker
      - prepare_docker_buildx
      - run:
          name: Build Quorum Hashicorp Vault Plugin
          command: |
            export DOCKER_IMAGE_PLATFORM="<< parameters.docker-image-platform >>"
            export DOCKER_IMAGE_REF="<< parameters.docker-image-registry >>/<< parameters.docker-image-tag >>"
            export DOCKERFILE="<< parameters.dockerfile >>"

            TARGETOS="$(echo "${DOCKER_IMAGE_PLATFORM}" | cut -d '/' -f 1)"
            TARGETARCH="$(echo "${DOCKER_IMAGE_PLATFORM}" | cut -d '/' -f 2)"

            if [ $TARGETOS != "linux" ]; then
              echo "Targeted OS not supported $TARGETOS"
              exit 1
            fi

            if [ $TARGETARCH == "amd64" ]; then
              DOCKER_IMAGE_TAG="${DOCKER_IMAGE_REF}"
            else
              DOCKER_IMAGE_TAG="${DOCKER_IMAGE_REF}.${TARGETARCH}"
            fi

            echo "Building image ${DOCKER_IMAGE_TAG} for {os:${TARGETOS}, arch:$TARGETARCH}..."
            DOCKER_BUILDKIT=1 docker build -f ${DOCKERFILE}\
            --label org.opencontainers.image.created=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
            --label org.opencontainers.image.url="https://consensys.net" \
            --label org.opencontainers.image.documentation="https://docs.quorum-key-manager.consensys.net/" \
            --label org.opencontainers.image.source="${CIRCLE_REPOSITORY_URL}" \
            --label org.opencontainers.image.version="${CIRCLE_TAG-branch}" \
            --label org.opencontainers.image.revision="${CIRCLE_SHA1:0:7}" \
            --label org.opencontainers.image.vendor="ConsenSys Software Inc." \
            --label org.opencontainers.image.licenses="BUSL-1.1" \
            --label org.opencontainers.image.title="${CIRCLE_PROJECT_REPONAME}" \
            --label org.opencontainers.image.description="This Quorum plugin enhances Hashicorp Vault Service with cryptographic operations under Vault engine." \
            --platform ${DOCKER_IMAGE_PLATFORM} \
            --push -t ${DOCKER_IMAGE_TAG} .

  push-prod-image:
    docker:
      - image: cimg/base:2020.01
    resource_class: xlarge
    steps:
      - checkout
      - attach_workspace:
          at: ./build/bin
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - prepare_docker
      - prepare_docker_buildx
      - docker_build_image
            
workflows:
  version: 2
  default:
    jobs:
      - styleCheck:
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /.*/
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /.*/
      - test:
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /.*/
      - build-docker-image:
          name: push-dev-image
          filters:
            branches:
              only: main
          context:
            - dockerhub-quorumengineering-rw
            - cloudsmith-tanuki-rw
          matrix:
            parameters:
              docker-image-tag: ["quorum-hashicorp-vault-plugin:${CIRCLE_SHA1:0:7}", "quorum-hashicorp-vault-plugin:develop"]
          docker-image-registry: ${CLOUDSMITH_DEV_REPO}
          requires:
            - styleCheck
            - test
            - build
      - publish-github-release:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build-docker-image:
          name: push-prod-image
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          context:
            - dockerhub-quorumengineering-rw
            - cloudsmith-tanuki-rw
          matrix:
            parameters:
              docker-image-tag: ["quorum-hashicorp-vault-plugin:${CIRCLE_TAG}", "quorum-hashicorp-vault-plugin:latest"]
          docker-image-platform: linux/amd64
          docker-image-registry: consensys
          dockerfile: Dockerfile.ci
          requires:
            - publish-github-release
      - build-docker-image:
          name: push-prod-image-arm64
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          context:
            - dockerhub-quorumengineering-rw
            - cloudsmith-tanuki-rw
          matrix:
            parameters:
              docker-image-tag: ["quorum-hashicorp-vault-plugin:${CIRCLE_TAG}", "quorum-hashicorp-vault-plugin:latest"]
          docker-image-platform: linux/arm64
          docker-image-registry: consensys
          requires:
            - publish-github-release
